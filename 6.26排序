#include <iostream>
#include <fstream>
#include <math.h>
#include <algorithm>
using namespace std;

/*int Swap(int arr[], int low, int high)
{
    
    int temp;
    
    temp = arr[low];
    
    arr[low] = arr[high];
    
    arr[high] = temp;
    
    return 0;
}

int QuickSort(int arr[], int low, int high)
{
    int a = low;
    int b = high;
    int base = arr[low];
    if (low >= high)
    {
        return 0;
    }
    while (low < high)
    {
        while (low < high && base <= arr[high])
        {
            high--;
        }
        if (base > arr[high])
        {
            Swap(arr,low ,high);
            low++;
        }
        while (low < high && base >= arr[low])
        {
            low++;
        }
        if (base < arr[low])
        {
            Swap(arr,low,high);
            high--;
        }
    }
    QuickSort(arr, a, low-1);
    QuickSort(arr, low+1, b);
    return 0;
} */

struct Stu
{
    char index[10];
    char college[10];
    char name[10];
}Stu[10];
struct Referee
{
    char namee[7];
    int score[5];
} Referee[7];

bool cmp(const Referee &a,const Referee &b)  //
{
    return 
}

/*int score()
{
    double a[7];
    double mark=0,max = 0, min = a[0], sum = 0;
    for (int i = 0; i < 7; i++)
    {
        scanf ("%lf", &a[i]);
        if (a[i] > max) max = a[i];
        if (a[i] < min) min = a[i];
        sum += a[i];
    }
    mark=(sum - max - min) / 5;
    return mark;
}*/
int main()
{

    ofstream out("/Users/s20181105303/Desktop/最终得分.txt");
    ifstream in("/Users/s20181105303/Desktop/选手信息.txt");
    ifstream inn("/Users/s20181105303/Desktop/裁判信息.txt");
    
    if(in.is_open())
    {
        cout << "file ok";
        for(int i=0;i<5;i++)
        {
            in>>Stu[i].index>>Stu[i].college>>Stu[i].name;
        }
        
        qsort(score,5,sizeof(score[0]),cmp);
        in.close();
        
    }
    
    if(inn.is_open())
    {
        for(int i=0;i<7;i++)
        {
            inn>>Referee[i].namee;
            for(int k=0;k<5;k++)
            {
                inn>>Referee[i].score[k];
            }
        }
        
        
        inn.close();
        
    }
    
    if(out.is_open())
        
    {
        for(int i=0;i<5;i++)
        {
            out<<Stu[i].index<<Stu[i].college<<Stu[i].name;
        }
        out.close();
        
    }
    
    return 0;
    
}
